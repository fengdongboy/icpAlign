// 颜色管理

#ifndef _COLORUTILS_H_
#define _COLORUTILS_H_

// RGB颜色空间转换为HSV空间颜色值
inline void rgb2hsv(float R, float G, float B, float& H, float& S, float&V)
{
	// r,g,b values are from 0 to 1
	// h = [0,360], s = [0,1], v = [0,1]
	// if s == 0, then h = -1 (undefined)

	float mn, mx, delta,tmp;
	tmp = min(R, G);
	mn = min( tmp, B );
	tmp = max( R, G);
	mx = max(tmp, B );
	V = mx; // v

	delta = mx - mn;

	if( mx != 0 )
		S = delta / mx; // s
	else
	{
		// r = g = b = 0 // s = 0, v is undefined
		S = 0;
		H = 0;
		return;
	}
	if( R == mx )
		H = ( G - B ) / delta; // between yellow & magenta
	else if( G == mx )
		H = 2 + ( B - R ) / delta; // between cyan & yellow
	else
		H = 4 + ( R - G ) / delta; // between magenta & cyan

	H *= 60; // degrees
	if( H < 0 )
		H += 360;
}

// HSV颜色空间转换为RGB空间颜色值
inline void hsv2rgb(float H, float S, float V, float &R, float &G, float &B)
{
	int i;
	float f, p, q, t;

	if( S == 0 )
	{
		// achromatic (grey)
		R = G = B = V;
		return;
	}

	H /= 60; // sector 0 to 5
	i = int( floor( H ) );
	f = H - i; // factorial part of h
	p = V * ( 1 - S );
	q = V * ( 1 - S * f );
	t = V * ( 1 - S * ( 1 - f ) );

	switch( i )
	{
	case 0:
		R = V;
		G = t;
		B = p;
		break;
	case 1:
		R = q;
		G = V;
		B = p;
		break;
	case 2:
		R = p;
		G = V;
		B = t;
		break;
	case 3:
		R = p;
		G = q;
		B = V;
		break;
	case 4:
		R = t;
		G = p;
		B = V;
		break;
	default: // case 5:
		R = V;
		G = p;
		B = q;
		break;
	}
}

// 多个模型显示用的rgb值
static double colorSet[][3] = {
	{0.8, 1.0, 1.0},
	{1.0, 0.8, 1.0},
	{1.0, 1.0, 0.8},
	{0.8, 0.8, 1.0},
	{0.8, 1.0, 0.8},
	{1.0, 0.8, 0.8},
	{0.4, 0.9, 0.9},
	{0.9, 0.4, 0.9},
	{0.9, 0.9, 0.4},
	{0.9, 0.5, 0.2},
	{0.5, 0.9, 0.2},
	{0.2, 0.5, 0.9},
	{0.5, 0.2, 0.9},
	{0.9, 0.2, 0.5},
	{0.2, 0.9, 0.5},
	{0.9, 0.7, 0.7},
	{0.7, 0.9, 0.7},
	{0.7, 0.7, 0.9},
	{0.7, 0.9, 0.9},
	{0.9, 0.7, 0.9},
	{0.9, 0.9, 0.7},
	{0.6, 0.6, 0.6},
	{0.6, 0.3, 0.1},
	{0.6, 0.1, 0.3},
	{0.3, 0.1, 0.6},
	{0.3, 0.6, 0.1},
	{0.1, 0.3, 0.6},
	{0.1, 0.6, 0.3},
	{0.4, 0.9, 0.3},
	{0.2, 0.9, 0.0},
};

static int colorSequenceNum = 100; // 色彩个数

// hsv转换到rgb空间得到的序列色彩
// hsv 从 [0 1 1] 到 [1 1 1] 分为100份
static double colorSequence[][3] = {
	{ 0.000000 , 0.000000 , 1.000000 },
	{ 0.000000 , 0.040000 , 1.000000 },
	{ 0.000000 , 0.080000 , 1.000000 },
	{ 0.000000 , 0.120000 , 1.000000 },
	{ 0.000000 , 0.160000 , 1.000000 },
	{ 0.000000 , 0.200000 , 1.000000 },
	{ 0.000000 , 0.240000 , 1.000000 },
	{ 0.000000 , 0.280000 , 1.000000 },
	{ 0.000000 , 0.320000 , 1.000000 },
	{ 0.000000 , 0.360000 , 1.000000 },
	{ 0.000000 , 0.400000 , 1.000000 },
	{ 0.000000 , 0.440000 , 1.000000 },
	{ 0.000000 , 0.480000 , 1.000000 },
	{ 0.000000 , 0.520000 , 1.000000 },
	{ 0.000000 , 0.560000 , 1.000000 },
	{ 0.000000 , 0.600000 , 1.000000 },
	{ 0.000000 , 0.640000 , 1.000000 },
	{ 0.000000 , 0.680000 , 1.000000 },
	{ 0.000000 , 0.720000 , 1.000000 },
	{ 0.000000 , 0.760000 , 1.000000 },
	{ 0.000000 , 0.800000 , 1.000000 },
	{ 0.000000 , 0.840000 , 1.000000 },
	{ 0.000000 , 0.880000 , 1.000000 },
	{ 0.000000 , 0.920000 , 1.000000 },
	{ 0.000000 , 0.960000 , 1.000000 },
	{ 0.000000 , 1.000000 , 1.000000 },
	{ 0.000000 , 1.000000 , 0.960000 },
	{ 0.000000 , 1.000000 , 0.920000 },
	{ 0.000000 , 1.000000 , 0.880000 },
	{ 0.000000 , 1.000000 , 0.840000 },
	{ 0.000000 , 1.000000 , 0.800000 },
	{ 0.000000 , 1.000000 , 0.760000 },
	{ 0.000000 , 1.000000 , 0.720000 },
	{ 0.000000 , 1.000000 , 0.680000 },
	{ 0.000000 , 1.000000 , 0.640000 },
	{ 0.000000 , 1.000000 , 0.600000 },
	{ 0.000000 , 1.000000 , 0.560000 },
	{ 0.000000 , 1.000000 , 0.520000 },
	{ 0.000000 , 1.000000 , 0.480000 },
	{ 0.000000 , 1.000000 , 0.440000 },
	{ 0.000000 , 1.000000 , 0.400000 },
	{ 0.000000 , 1.000000 , 0.360000 },
	{ 0.000000 , 1.000000 , 0.320000 },
	{ 0.000000 , 1.000000 , 0.280000 },
	{ 0.000000 , 1.000000 , 0.240000 },
	{ 0.000000 , 1.000000 , 0.200000 },
	{ 0.000000 , 1.000000 , 0.160000 },
	{ 0.000000 , 1.000000 , 0.120000 },
	{ 0.000000 , 1.000000 , 0.080000 },
	{ 0.000000 , 1.000000 , 0.040000 },
	{ 0.000000 , 1.000000 , 0.000000 },
	{ 0.040000 , 1.000000 , 0.000000 },
	{ 0.080000 , 1.000000 , 0.000000 },
	{ 0.120000 , 1.000000 , 0.000000 },
	{ 0.160000 , 1.000000 , 0.000000 },
	{ 0.200000 , 1.000000 , 0.000000 },
	{ 0.240000 , 1.000000 , 0.000000 },
	{ 0.280000 , 1.000000 , 0.000000 },
	{ 0.320000 , 1.000000 , 0.000000 },
	{ 0.360000 , 1.000000 , 0.000000 },
	{ 0.400000 , 1.000000 , 0.000000 },
	{ 0.440000 , 1.000000 , 0.000000 },
	{ 0.480000 , 1.000000 , 0.000000 },
	{ 0.520000 , 1.000000 , 0.000000 },
	{ 0.560000 , 1.000000 , 0.000000 },
	{ 0.600000 , 1.000000 , 0.000000 },
	{ 0.640000 , 1.000000 , 0.000000 },
	{ 0.680000 , 1.000000 , 0.000000 },
	{ 0.720000 , 1.000000 , 0.000000 },
	{ 0.760000 , 1.000000 , 0.000000 },
	{ 0.800000 , 1.000000 , 0.000000 },
	{ 0.840000 , 1.000000 , 0.000000 },
	{ 0.880000 , 1.000000 , 0.000000 },
	{ 0.920000 , 1.000000 , 0.000000 },
	{ 0.960000 , 1.000000 , 0.000000 },
	{ 1.000000 , 1.000000 , 0.000000 },
	{ 1.000000 , 0.960000 , 0.000000 },
	{ 1.000000 , 0.920000 , 0.000000 },
	{ 1.000000 , 0.880000 , 0.000000 },
	{ 1.000000 , 0.840000 , 0.000000 },
	{ 1.000000 , 0.800000 , 0.000000 },
	{ 1.000000 , 0.760000 , 0.000000 },
	{ 1.000000 , 0.720000 , 0.000000 },
	{ 1.000000 , 0.680000 , 0.000000 },
	{ 1.000000 , 0.640000 , 0.000000 },
	{ 1.000000 , 0.600000 , 0.000000 },
	{ 1.000000 , 0.560000 , 0.000000 },
	{ 1.000000 , 0.520000 , 0.000000 },
	{ 1.000000 , 0.480000 , 0.000000 },
	{ 1.000000 , 0.440000 , 0.000000 },
	{ 1.000000 , 0.400000 , 0.000000 },
	{ 1.000000 , 0.360000 , 0.000000 },
	{ 1.000000 , 0.320000 , 0.000000 },
	{ 1.000000 , 0.280000 , 0.000000 },
	{ 1.000000 , 0.240000 , 0.000000 },
	{ 1.000000 , 0.200000 , 0.000000 },
	{ 1.000000 , 0.160000 , 0.000000 },
	{ 1.000000 , 0.120000 , 0.000000 },
	{ 1.000000 , 0.080000 , 0.000000 },
	{ 1.000000 , 0.040000 , 0.000000 },
};

/*static double colorSequence[][3] = {
	{1.0000  ,  0.0600    ,     0},
	{1.0000  ,  0.1200    ,     0},
	{1.0000  ,  0.1800    ,     0},
	{1.0000  ,  0.2400    ,     0},
	{1.0000  ,  0.3000    ,     0},
	{1.0000  ,  0.3600    ,     0},
	{1.0000  ,  0.4200    ,     0},
	{1.0000  ,  0.4800    ,     0},
	{1.0000  ,  0.5400    ,     0},
	{1.0000  ,  0.6000    ,     0},
	{1.0000  ,  0.6600    ,     0},
	{1.0000  ,  0.7200    ,     0},
	{1.0000  ,  0.7800    ,     0},
	{1.0000  ,  0.8400    ,     0},
	{1.0000  ,  0.9000    ,     0},
	{1.0000  ,  0.9600    ,     0},
	{0.9800  ,  1.0000    ,     0},
	{0.9200  ,  1.0000    ,     0},
	{0.8600  ,  1.0000    ,     0},
	{0.8000  ,  1.0000    ,     0},
	{0.7400  ,  1.0000    ,     0},
	{0.6800  ,  1.0000    ,     0},
	{0.6200  ,  1.0000    ,     0},
	{0.5600  ,  1.0000    ,     0},
	{0.5000  ,  1.0000    ,     0},
	{0.4400  ,  1.0000    ,     0},
	{0.3800  ,  1.0000    ,     0},
	{0.3200  ,  1.0000    ,     0},
	{0.2600  ,  1.0000    ,     0},
	{0.2000  ,  1.0000    ,     0},
	{0.1400  ,  1.0000    ,     0},
	{0.0800  ,  1.0000    ,     0},
	{0.0200  ,  1.0000    ,     0},
	{0  ,  1.0000  ,  0.0400},
	{0  ,  1.0000  ,  0.1000},
	{0  ,  1.0000  ,  0.1600},
	{0  ,  1.0000  ,  0.2200},
	{0  ,  1.0000  ,  0.2800},
	{0  ,  1.0000  ,  0.3400},
	{0  ,  1.0000  ,  0.4000},
	{0  ,  1.0000  ,  0.4600},
	{0  ,  1.0000  ,  0.5200},
	{0  ,  1.0000  ,  0.5800},
	{0  ,  1.0000  ,  0.6400},
	{0  ,  1.0000  ,  0.7000},
	{0  ,  1.0000  ,  0.7600},
	{0  ,  1.0000  ,  0.8200},
	{0  ,  1.0000  ,  0.8800},
	{0  ,  1.0000  ,  0.9400},
	{0  ,  1.0000  ,  1.0000},
	{0  ,  0.9400  ,  1.0000},
	{0  ,  0.8800  ,  1.0000},
	{0  ,  0.8200  ,  1.0000},
	{0  ,  0.7600  ,  1.0000},
	{0  ,  0.7000  ,  1.0000},
	{0  ,  0.6400  ,  1.0000},
	{0  ,  0.5800  ,  1.0000},
	{0  ,  0.5200  ,  1.0000},
	{0  ,  0.4600  ,  1.0000},
	{0  ,  0.4000  ,  1.0000},
	{0  ,  0.3400  ,  1.0000},
	{0  ,  0.2800  ,  1.0000},
	{0  ,  0.2200  ,  1.0000},
	{0  ,  0.1600  ,  1.0000},
	{0  ,  0.1000  ,  1.0000},
	{0  ,  0.0400  ,  1.0000},
	{0.0200    ,     0  ,  1.0000},
	{0.0800    ,     0  ,  1.0000},
	{0.1400    ,     0  ,  1.0000},
	{0.2000    ,     0  ,  1.0000},
	{0.2600    ,     0  ,  1.0000},
	{0.3200    ,     0  ,  1.0000},
	{0.3800    ,     0  ,  1.0000},
	{0.4400    ,     0  ,  1.0000},
	{0.5000    ,     0  ,  1.0000},
	{0.5600    ,     0  ,  1.0000},
	{0.6200    ,     0  ,  1.0000},
	{0.6800    ,     0  ,  1.0000},
	{0.7400    ,     0  ,  1.0000},
	{0.8000    ,     0  ,  1.0000},
	{0.8600    ,     0  ,  1.0000},
	{0.9200    ,     0  ,  1.0000},
	{0.9800    ,     0  ,  1.0000},
	{1.0000    ,     0  ,  0.9600},
	{1.0000    ,     0  ,  0.9000},
	{1.0000    ,     0  ,  0.8400},
	{1.0000    ,     0  ,  0.7800},
	{1.0000    ,     0  ,  0.7200},
	{1.0000    ,     0  ,  0.6600},
	{1.0000    ,     0  ,  0.6000},
	{1.0000    ,     0  ,  0.5400},
	{1.0000    ,     0  ,  0.4800},
	{1.0000    ,     0  ,  0.4200},
	{1.0000    ,     0  ,  0.3600},
	{1.0000    ,     0  ,  0.3000},
	{1.0000    ,     0  ,  0.2400},
	{1.0000    ,     0  ,  0.1800},
	{1.0000    ,     0  ,  0.1200},
	{1.0000    ,     0  ,  0.0600},
	{1.0000    ,     0  ,       0},
};*/

#endif
